Assumptions
-Human player always goes first
-The computer is non-optimal (for now); it will move in the next available space


_|_|_
_|_|_
_|_|_

X|_|_
_|X|_
O|_|_

class TicTac

  def new_game
    gameController = GameController.new()
  end
end


class Board 
  attr_accessor :board
  def initialize
    @board = [['_','_','_'],['_','_','_'],['_','_','_']]
  end
end

xit "takes user's name and returns it" do
    game = TicTacToe.new
    expect(STDOUT).to receive(:puts).with("Please enter a valid move: ")
    allow(STDIN).to receive(:gets) { 'hello' }
    expect(game.get_input).to eq('hello')
end

# it 'asks user for move and receives input' do
#     game = TicTacToe.new
#     allow($stdin).to receive(:gets).and_return('hello')
#     input = $stdin.gets
#     expect(input).to eq('')
# end

# it "takes user's name and returns it" do
#     expect(STDOUT).to receive(:puts).with("What shall I call you today?")
#     allow(STDIN).to receive(:gets) { 'joe' }
#     expect(game.ask_for_name).to eq 'Joe'
#   end

# describe 'capture_name' do
#     it 'returns foo as input' do
#       allow($stdin).to receive(:gets).and_return('foo')
#       name = $stdin.gets

#       expect(name).to eq('food')
#     end
#   end
